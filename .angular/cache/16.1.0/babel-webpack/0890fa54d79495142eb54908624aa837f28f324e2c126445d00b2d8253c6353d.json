{"ast":null,"code":"import { URLS_SERVICIOS } from 'src/app/config/config';\nimport { map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsuarioService {\n  constructor(http) {\n    this.http = http;\n    console.log(\"Servicio de usuario listo\");\n  }\n  estaLogueado() {\n    return this.token.lengt > 5 ? true : false;\n  }\n  guardarStorage(id, token, usuario) {\n    localStorage.setItem('id', id);\n    localStorage.setItem('token', token);\n    localStorage.setItem('usuario', JSON.stringify(token));\n    this.usuario = usuario;\n    this.token = token;\n  }\n  loginGoogle(token) {\n    let url = URLS_SERVICIOS + '/login/google';\n    return this.http.post(url, {\n      token\n    }).pipe(map(resp => {\n      this.guardarStorage(resp.id, resp.token, resp.usuario);\n      return true;\n    }));\n  }\n  login(usuario, recordar = false) {\n    if (recordar) {\n      localStorage.setItem('email', usuario.email);\n    } else {\n      localStorage.removeItem('email');\n    }\n    let url = URLS_SERVICIOS + '/login';\n    return this.http.post(url, usuario).pipe(map(resp => {\n      this.guardarStorage(resp.id, resp.token, resp.usuario);\n      return true;\n    }));\n  }\n  crearUsuario(usuario) {\n    let url = URLS_SERVICIOS + '/usuario';\n    return this.http.post(url, usuario).pipe(map(res => {\n      Swal.fire('Usuario creado', usuario.email, 'success');\n      return res.usuario;\n    }));\n  }\n}\nUsuarioService.ɵfac = function UsuarioService_Factory(t) {\n  return new (t || UsuarioService)(i0.ɵɵinject(i1.HttpClient));\n};\nUsuarioService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsuarioService,\n  factory: UsuarioService.ɵfac\n});","map":{"version":3,"names":["URLS_SERVICIOS","map","Swal","UsuarioService","constructor","http","console","log","estaLogueado","token","lengt","guardarStorage","id","usuario","localStorage","setItem","JSON","stringify","loginGoogle","url","post","pipe","resp","login","recordar","email","removeItem","crearUsuario","res","fire","i0","ɵɵinject","i1","HttpClient","factory","ɵfac"],"sources":["C:\\Users\\alany\\OneDrive\\Desktop\\CursoAngular\\Zips\\admipro-udemy-main\\admipro-udemy-main\\src\\app\\services\\usuario\\usuario.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Usuario } from 'models/usuario.model';\nimport { URLS_SERVICIOS } from 'src/app/config/config';\nimport { map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\n\n@Injectable()\nexport class UsuarioService {\n\n  usuario: Usuario | any;\n  token: string | any;\n\n  constructor(\n    public http: HttpClient\n  ) { \n    console.log(\"Servicio de usuario listo\")\n  }\n\n  estaLogueado(){\n    return (this.token.lengt > 5)? true: false;\n  }\n\n  guardarStorage(id: string, token:string, usuario: Usuario){\n    localStorage.setItem('id', id);\n    localStorage.setItem('token', token);\n    localStorage.setItem('usuario', JSON.stringify(token));\n\n    this.usuario = usuario;\n    this.token = token;\n  }\n\n  loginGoogle(token: string){\n    let url = URLS_SERVICIOS + '/login/google';\n\n     return this.http.post(url, {token}).pipe(\n      map((resp: any)=>{\n        this.guardarStorage(resp.id, resp.token, resp.usuario )\n        return true;\n      })\n     )\n\n\n  }\n\n  login(usuario: Usuario, recordar: boolean = false){\n\n    if (recordar) {\n      localStorage.setItem('email', usuario.email)\n    }else{\n       localStorage.removeItem('email');\n    }\n\n\n    let url = URLS_SERVICIOS + '/login';\n     return this.http.post(url, usuario).pipe(\n      map((resp: any)=>{\n        this.guardarStorage(resp.id, resp.token, resp.usuario);\n\n        return true;\n      })\n     )\n  }\n\n  crearUsuario(usuario: Usuario){\n    let url = URLS_SERVICIOS + '/usuario';\n\n    return this.http.post(url, usuario).pipe(\n      map((res: any)=>{\n        Swal.fire('Usuario creado', usuario.email , 'success');\n        return res.usuario;\n      })\n    )\n  }\n\n  \n\n}\n"],"mappings":"AAGA,SAASA,cAAc,QAAQ,uBAAuB;AACtD,SAASC,GAAG,QAAQ,gBAAgB;AACpC,OAAOC,IAAI,MAAM,aAAa;;;AAG9B,OAAM,MAAOC,cAAc;EAKzBC,YACSC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAEXC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EAC1C;EAEAC,YAAYA,CAAA;IACV,OAAQ,IAAI,CAACC,KAAK,CAACC,KAAK,GAAG,CAAC,GAAG,IAAI,GAAE,KAAK;EAC5C;EAEAC,cAAcA,CAACC,EAAU,EAAEH,KAAY,EAAEI,OAAgB;IACvDC,YAAY,CAACC,OAAO,CAAC,IAAI,EAAEH,EAAE,CAAC;IAC9BE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEN,KAAK,CAAC;IACpCK,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACR,KAAK,CAAC,CAAC;IAEtD,IAAI,CAACI,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACJ,KAAK,GAAGA,KAAK;EACpB;EAEAS,WAAWA,CAACT,KAAa;IACvB,IAAIU,GAAG,GAAGnB,cAAc,GAAG,eAAe;IAEzC,OAAO,IAAI,CAACK,IAAI,CAACe,IAAI,CAACD,GAAG,EAAE;MAACV;IAAK,CAAC,CAAC,CAACY,IAAI,CACvCpB,GAAG,CAAEqB,IAAS,IAAG;MACf,IAAI,CAACX,cAAc,CAACW,IAAI,CAACV,EAAE,EAAEU,IAAI,CAACb,KAAK,EAAEa,IAAI,CAACT,OAAO,CAAE;MACvD,OAAO,IAAI;IACb,CAAC,CAAC,CACF;EAGJ;EAEAU,KAAKA,CAACV,OAAgB,EAAEW,QAAA,GAAoB,KAAK;IAE/C,IAAIA,QAAQ,EAAE;MACZV,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,OAAO,CAACY,KAAK,CAAC;KAC7C,MAAI;MACFX,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;;IAInC,IAAIP,GAAG,GAAGnB,cAAc,GAAG,QAAQ;IAClC,OAAO,IAAI,CAACK,IAAI,CAACe,IAAI,CAACD,GAAG,EAAEN,OAAO,CAAC,CAACQ,IAAI,CACvCpB,GAAG,CAAEqB,IAAS,IAAG;MACf,IAAI,CAACX,cAAc,CAACW,IAAI,CAACV,EAAE,EAAEU,IAAI,CAACb,KAAK,EAAEa,IAAI,CAACT,OAAO,CAAC;MAEtD,OAAO,IAAI;IACb,CAAC,CAAC,CACF;EACJ;EAEAc,YAAYA,CAACd,OAAgB;IAC3B,IAAIM,GAAG,GAAGnB,cAAc,GAAG,UAAU;IAErC,OAAO,IAAI,CAACK,IAAI,CAACe,IAAI,CAACD,GAAG,EAAEN,OAAO,CAAC,CAACQ,IAAI,CACtCpB,GAAG,CAAE2B,GAAQ,IAAG;MACd1B,IAAI,CAAC2B,IAAI,CAAC,gBAAgB,EAAEhB,OAAO,CAACY,KAAK,EAAG,SAAS,CAAC;MACtD,OAAOG,GAAG,CAACf,OAAO;IACpB,CAAC,CAAC,CACH;EACH;;AAjEWV,cAAc,C;mBAAdA,cAAc,EAAA2B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAd9B,cAAc,C;SAAdA,cAAc;EAAA+B,OAAA,EAAd/B,cAAc,CAAAgC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}