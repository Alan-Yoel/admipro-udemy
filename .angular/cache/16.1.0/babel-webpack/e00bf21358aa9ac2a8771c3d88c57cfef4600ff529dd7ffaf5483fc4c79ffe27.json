{"ast":null,"code":"import { URLS_SERVICIOS } from 'src/app/config/config';\nimport { map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsuarioService {\n  constructor(http) {\n    this.http = http;\n    console.log(\"Servicio de usuario listo\");\n  }\n  login(usuario, recordar = false) {\n    let url = URLS_SERVICIOS + '/login';\n    return this.http.post(url, usuario).pipe(map(reps => {\n      localStorage.setItem('id', reps.id);\n      localStorage.setItem('token', reps.token);\n      localStorage.setItem('usuario', JSON.stringify(reps.token));\n    }));\n  }\n  crearUsuario(usuario) {\n    let url = URLS_SERVICIOS + '/usuario';\n    return this.http.post(url, usuario).pipe(map(res => {\n      Swal.fire('Usuario creado', usuario.email, 'success');\n      return res.usuario;\n    }));\n  }\n}\nUsuarioService.ɵfac = function UsuarioService_Factory(t) {\n  return new (t || UsuarioService)(i0.ɵɵinject(i1.HttpClient));\n};\nUsuarioService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsuarioService,\n  factory: UsuarioService.ɵfac\n});","map":{"version":3,"names":["URLS_SERVICIOS","map","Swal","UsuarioService","constructor","http","console","log","login","usuario","recordar","url","post","pipe","reps","localStorage","setItem","id","token","JSON","stringify","crearUsuario","res","fire","email","i0","ɵɵinject","i1","HttpClient","factory","ɵfac"],"sources":["C:\\Users\\alany\\OneDrive\\Desktop\\CursoAngular\\Zips\\admipro-udemy-main\\admipro-udemy-main\\src\\app\\services\\usuario\\usuario.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Usuario } from 'models/usuario.model';\nimport { URLS_SERVICIOS } from 'src/app/config/config';\nimport { map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\n\n@Injectable()\nexport class UsuarioService {\n\n  constructor(\n    public http: HttpClient\n  ) { \n    console.log(\"Servicio de usuario listo\")\n  }\n\n  login(usuario: Usuario, recordar: boolean = false){\n    let url = URLS_SERVICIOS + '/login';\n     return this.http.post(url, usuario).pipe(\n      map((reps: any)=>{\n        localStorage.setItem('id', reps.id)\n        localStorage.setItem('token', reps.token)\n        localStorage.setItem('usuario', JSON.stringify(reps.token));\n      });\n     )\n  }\n\n  crearUsuario(usuario: Usuario){\n    let url = URLS_SERVICIOS + '/usuario';\n\n    return this.http.post(url, usuario).pipe(\n      map((res: any)=>{\n        Swal.fire('Usuario creado', usuario.email , 'success');\n        return res.usuario;\n      })\n    )\n  }\n\n  \n\n}\n"],"mappings":"AAGA,SAASA,cAAc,QAAQ,uBAAuB;AACtD,SAASC,GAAG,QAAQ,gBAAgB;AACpC,OAAOC,IAAI,MAAM,aAAa;;;AAG9B,OAAM,MAAOC,cAAc;EAEzBC,YACSC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAEXC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EAC1C;EAEAC,KAAKA,CAACC,OAAgB,EAAEC,QAAA,GAAoB,KAAK;IAC/C,IAAIC,GAAG,GAAGX,cAAc,GAAG,QAAQ;IAClC,OAAO,IAAI,CAACK,IAAI,CAACO,IAAI,CAACD,GAAG,EAAEF,OAAO,CAAC,CAACI,IAAI,CACvCZ,GAAG,CAAEa,IAAS,IAAG;MACfC,YAAY,CAACC,OAAO,CAAC,IAAI,EAAEF,IAAI,CAACG,EAAE,CAAC;MACnCF,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,IAAI,CAACI,KAAK,CAAC;MACzCH,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEG,IAAI,CAACC,SAAS,CAACN,IAAI,CAACI,KAAK,CAAC,CAAC;IAC7D,CAAC,CAAC;EAEN;EAEAG,YAAYA,CAACZ,OAAgB;IAC3B,IAAIE,GAAG,GAAGX,cAAc,GAAG,UAAU;IAErC,OAAO,IAAI,CAACK,IAAI,CAACO,IAAI,CAACD,GAAG,EAAEF,OAAO,CAAC,CAACI,IAAI,CACtCZ,GAAG,CAAEqB,GAAQ,IAAG;MACdpB,IAAI,CAACqB,IAAI,CAAC,gBAAgB,EAAEd,OAAO,CAACe,KAAK,EAAG,SAAS,CAAC;MACtD,OAAOF,GAAG,CAACb,OAAO;IACpB,CAAC,CAAC,CACH;EACH;;AA5BWN,cAAc,C;mBAAdA,cAAc,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdzB,cAAc,C;SAAdA,cAAc;EAAA0B,OAAA,EAAd1B,cAAc,CAAA2B;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}