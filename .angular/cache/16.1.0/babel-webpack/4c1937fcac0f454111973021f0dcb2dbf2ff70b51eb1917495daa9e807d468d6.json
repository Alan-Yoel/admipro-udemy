{"ast":null,"code":"import { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport default class RxjsComponent {\n  constructor() {\n    this.subscription = this.regresaObservable().subscribe(numero => console.log(\"subs \", numero), error => console.error(\"error en el obs\", error), () => console.log(\"el observador termino!\"));\n  }\n  ngOnInit() {}\n  ngOnDestroy() {\n    console.log('La pagina se va a cerrar');\n    this.subscription.unsubscribe();\n  }\n  regresaObservable() {\n    return new Observable(observer => {\n      let contador = 0;\n      let intervalo = setInterval(() => {\n        contador++;\n        const salida = {\n          valor: contador\n        };\n        observer.next(salida);\n        // if(contador === 3){\n        //   clearInterval(intervalo);\n        //   observer.complete();\n        // }\n        // if (contador === 2) {\n        //   // clearInterval(intervalo);\n        //   observer.error(\"Auxilio!\")\n        // }\n      }, 1000);\n    }).pipe(map(resp => resp.valor), filter((valor, index) => {\n      if (valor % 2 === 1) {\n        //impar\n        return true;\n      } else {\n        //par\n        return false;\n      }\n    }));\n  }\n}\nRxjsComponent.ɵfac = function RxjsComponent_Factory(t) {\n  return new (t || RxjsComponent)();\n};\nRxjsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RxjsComponent,\n  selectors: [[\"app-rxjs\"]],\n  decls: 2,\n  vars: 0,\n  template: function RxjsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"rxjs works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"names":["Observable","map","filter","RxjsComponent","constructor","subscription","regresaObservable","subscribe","numero","console","log","error","ngOnInit","ngOnDestroy","unsubscribe","observer","contador","intervalo","setInterval","salida","valor","next","pipe","resp","index","selectors","decls","vars","template","RxjsComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\alany\\OneDrive\\Desktop\\CursoAngular\\Zips\\admipro-udemy-main\\admipro-udemy-main\\src\\app\\pages\\rxjs\\rxjs.component.ts","C:\\Users\\alany\\OneDrive\\Desktop\\CursoAngular\\Zips\\admipro-udemy-main\\admipro-udemy-main\\src\\app\\pages\\rxjs\\rxjs.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Observable, Subscriber, Subscription } from 'rxjs';\nimport { retry, map, filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-rxjs',\n  templateUrl: './rxjs.component.html',\n  styles: [\n  ]\n})\nexport default class RxjsComponent implements OnInit, OnDestroy {\n\n  subscription: Subscription | any;\n\n  constructor(){\n\n    this.subscription = this.regresaObservable()\n    .subscribe(\n      numero => console.log(\"subs \", numero),\n      error => console.error(\"error en el obs\", error),\n      () => console.log(\"el observador termino!\")\n      \n    );\n\n    \n\n  }\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n    console.log('La pagina se va a cerrar');\n    this.subscription.unsubscribe();\n  }\n\n  regresaObservable(): Observable <number>{\n     return new Observable((observer: Subscriber <any> )=>{\n\n      let contador = 0;\n\n      let intervalo = setInterval (()=>{\n        contador++;  \n\n        const salida = {\n          valor: contador\n        };\n\n        observer.next(salida);\n       \n        // if(contador === 3){\n        //   clearInterval(intervalo);\n        //   observer.complete();\n\n        // }\n\n        // if (contador === 2) {\n        //   // clearInterval(intervalo);\n        //   observer.error(\"Auxilio!\")\n        // }\n\n      }, 1000)\n\n\n    }).pipe(\n\n      map( resp => resp.valor),\n      filter( (valor, index)=> {\n        if ((valor % 2) === 1) {\n          //impar\n          return true\n        }else{\n          //par\n          return false\n        }\n      })\n    );\n\n    \n  }\n\n\n\n}\n","<p>rxjs works!</p>\n"],"mappings":"AACA,SAASA,UAAU,QAAkC,MAAM;AAC3D,SAAgBC,GAAG,EAAEC,MAAM,QAAQ,gBAAgB;;AAQnD,eAAc,MAAOC,aAAa;EAIhCC,YAAA;IAEE,IAAI,CAACC,YAAY,GAAG,IAAI,CAACC,iBAAiB,EAAE,CAC3CC,SAAS,CACRC,MAAM,IAAIC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,MAAM,CAAC,EACtCG,KAAK,IAAIF,OAAO,CAACE,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC,EAChD,MAAMF,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC,CAE5C;EAIH;EACAE,QAAQA,CAAA,GACR;EAEAC,WAAWA,CAAA;IACTJ,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACvC,IAAI,CAACL,YAAY,CAACS,WAAW,EAAE;EACjC;EAEAR,iBAAiBA,CAAA;IACd,OAAO,IAAIN,UAAU,CAAEe,QAA0B,IAAI;MAEpD,IAAIC,QAAQ,GAAG,CAAC;MAEhB,IAAIC,SAAS,GAAGC,WAAW,CAAE,MAAI;QAC/BF,QAAQ,EAAE;QAEV,MAAMG,MAAM,GAAG;UACbC,KAAK,EAAEJ;SACR;QAEDD,QAAQ,CAACM,IAAI,CAACF,MAAM,CAAC;QAErB;QACA;QACA;QAEA;QAEA;QACA;QACA;QACA;MAEF,CAAC,EAAE,IAAI,CAAC;IAGV,CAAC,CAAC,CAACG,IAAI,CAELrB,GAAG,CAAEsB,IAAI,IAAIA,IAAI,CAACH,KAAK,CAAC,EACxBlB,MAAM,CAAE,CAACkB,KAAK,EAAEI,KAAK,KAAG;MACtB,IAAKJ,KAAK,GAAG,CAAC,KAAM,CAAC,EAAE;QACrB;QACA,OAAO,IAAI;OACZ,MAAI;QACH;QACA,OAAO,KAAK;;IAEhB,CAAC,CAAC,CACH;EAGH;;AApEmBjB,aAAa,C;mBAAbA,aAAa;AAAA;AAAbA,aAAa,C;QAAbA,aAAa;EAAAsB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCVlCE,EAAA,CAAAC,cAAA,QAAG;MAAAD,EAAA,CAAAE,MAAA,kBAAW;MAAAF,EAAA,CAAAG,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}