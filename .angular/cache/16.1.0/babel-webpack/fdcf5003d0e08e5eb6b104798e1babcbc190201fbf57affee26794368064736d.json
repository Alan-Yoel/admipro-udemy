{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class PromesasComponent {\n  constructor() {\n    this.contarTres().then(mensaje => console.log(\"termino!\", mensaje)).catch(error => console.log('Error en la promesa', error));\n  }\n  contarTres() {\n    return new Promise((resolve, reject) => {\n      let contador = 0;\n      let itervalo = setInterval(() => {\n        contador += 1;\n        if (contador === 3) {\n          resolve(true);\n          clearInterval(itervalo);\n        }\n      }, 1000);\n    });\n  }\n}\nPromesasComponent.ɵfac = function PromesasComponent_Factory(t) {\n  return new (t || PromesasComponent)();\n};\nPromesasComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PromesasComponent,\n  selectors: [[\"app-promesas\"]],\n  decls: 2,\n  vars: 0,\n  template: function PromesasComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"promesas works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"names":["PromesasComponent","constructor","contarTres","then","mensaje","console","log","catch","error","Promise","resolve","reject","contador","itervalo","setInterval","clearInterval","selectors","decls","vars","template","PromesasComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\alany\\OneDrive\\Desktop\\CursoAngular\\Zips\\admipro-udemy-main\\admipro-udemy-main\\src\\app\\pages\\promesas\\promesas.component.ts","C:\\Users\\alany\\OneDrive\\Desktop\\CursoAngular\\Zips\\admipro-udemy-main\\admipro-udemy-main\\src\\app\\pages\\promesas\\promesas.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-promesas',\n  templateUrl: './promesas.component.html',\n  styles: [\n  ]\n})\nexport class PromesasComponent {\n  constructor(){\n\n    this.contarTres().then(\n      mensaje => console.log(\"termino!\", mensaje)\n    )\n    .catch(error => console.log('Error en la promesa', error))\n  }\n\n  contarTres(): Promise<boolean>{\n\n    return new Promise((resolve: any, reject: any) =>{\n      let contador = 0\n\n      let itervalo = setInterval(()=>{\n\n        contador +=1;\n\n        if(contador === 3){\n          resolve(true);\n          clearInterval(itervalo)\n        }\n      }, 1000);\n\n    });\n\n    \n\n  }\n\n\n}\n","<p>promesas works!</p>\n"],"mappings":";AAQA,OAAM,MAAOA,iBAAiB;EAC5BC,YAAA;IAEE,IAAI,CAACC,UAAU,EAAE,CAACC,IAAI,CACpBC,OAAO,IAAIC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,OAAO,CAAC,CAC5C,CACAG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEE,KAAK,CAAC,CAAC;EAC5D;EAEAN,UAAUA,CAAA;IAER,OAAO,IAAIO,OAAO,CAAC,CAACC,OAAY,EAAEC,MAAW,KAAI;MAC/C,IAAIC,QAAQ,GAAG,CAAC;MAEhB,IAAIC,QAAQ,GAAGC,WAAW,CAAC,MAAI;QAE7BF,QAAQ,IAAG,CAAC;QAEZ,IAAGA,QAAQ,KAAK,CAAC,EAAC;UAChBF,OAAO,CAAC,IAAI,CAAC;UACbK,aAAa,CAACF,QAAQ,CAAC;;MAE3B,CAAC,EAAE,IAAI,CAAC;IAEV,CAAC,CAAC;EAIJ;;AA5BWb,iBAAiB,C;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB,C;QAAjBA,iBAAiB;EAAAgB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR9BE,EAAA,CAAAC,cAAA,QAAG;MAAAD,EAAA,CAAAE,MAAA,sBAAe;MAAAF,EAAA,CAAAG,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}